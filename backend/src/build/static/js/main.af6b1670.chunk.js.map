{"version":3,"sources":["components/Navbar.tsx","components/Form.tsx","components/List.tsx","pages/Task.tsx","components/App.tsx","index.tsx"],"names":["Navbar","className","to","Form","props","onSubmit","type","value","formValues","title","onChange","onChangeInput","name","placeholder","required","description","onChangeTextArea","rows","image_url","List","data","map","post","style","width","onClick","update","id","delete","Task","useState","setData","listData","setListData","useEffect","fetchPost","a","fetch","json","posts","console","log","updatePost","query","Fragment","e","method","body","JSON","stringify","headers","then","res","toast","success","catch","err","error","preventDefault","target","swal","text","icon","buttons","respuesta","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af6b1670.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Navbar() {\r\n    return(\r\n        <nav className=\"navbar navbar-dark bg-dark\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"navbar-brand\">\r\n                    <span className=\"fs-2 fw-bold\">Task</span>\r\n                </Link>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\ninterface Data {\r\n    title: string,\r\n    description: string,\r\n    image_url: string,\r\n}\r\n\r\ninterface Props {\r\n    onSubmit: (e: React.FormEvent<HTMLFormElement>) => void;\r\n    onChangeInput: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    onChangeTextArea: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\r\n    formValues: Data;\r\n}\r\n\r\nconst Form: React.FC<Props> = (props) => {\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n                <form onSubmit={props.onSubmit}>\r\n                    <div className=\"mb-3\">\r\n                        <input type=\"text\" value={props.formValues.title} onChange={props.onChangeInput} className=\"form-control\" name=\"title\" placeholder=\"Title\" required />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <textarea name=\"description\" value={props.formValues.description} onChange={props.onChangeTextArea} className=\"form-control\" rows={5} placeholder=\"Description\" required></textarea>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <input type=\"url\" value={props.formValues.image_url} onChange={props.onChangeInput} className=\"form-control\" name=\"image_url\" placeholder=\"Image Url\" required />\r\n                    </div>\r\n                    <div className=\"d-grid gap-2\">\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Guardar</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport { RiEdit2Line, RiDeleteBin2Line } from 'react-icons/ri';\r\n\r\nimport { Posts } from '../pages/Task'\r\n\r\ninterface DataList {\r\n    data: Array<Posts>;\r\n    delete: (id: string) => void;\r\n    update: (id: string) => void;\r\n}\r\n\r\nconst List: React.FC<DataList> = (props) => {\r\n\r\n    return (\r\n        <table className=\"table table-striped table-hover\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Title</th>\r\n                    <th>Description</th>\r\n                    <th>Image Url</th>\r\n                    <th>Controls</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {props.data.map(post => {\r\n                    return (\r\n                        <tr key={post.id}>\r\n                            <td>{post.title}</td>\r\n                            <td>{post.description}</td>\r\n                            <td>{post.image_url}</td>\r\n                            <td style={{width: '8rem'}}>\r\n                                <button className=\"btn btn-info\" onClick={() => props.update(post.id)}><RiEdit2Line /></button>\r\n                                <button className=\"btn btn-danger ms-3\" onClick={() => props.delete(post.id)}><RiDeleteBin2Line /></button>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default List;","import React, { useEffect, useState } from 'react';\r\nimport swal from 'sweetalert';\r\n\r\nimport Navbar from '../components/Navbar';\r\nimport Form from '../components/Form';\r\nimport List from '../components/List';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nexport interface Posts {\r\n    id: string,\r\n    title: string,\r\n    description: string,\r\n    image_url: string,\r\n    create_at: string\r\n}\r\n\r\ninterface Data {\r\n    title: string,\r\n    description: string,\r\n    image_url: string,\r\n    id?: string\r\n}\r\n\r\nconst Task = () => {\r\n\r\n    const [data, setData] = useState<Data>({\r\n        title: '',\r\n        description: '',\r\n        image_url: '',\r\n        id: ''\r\n    });\r\n    const [listData, setListData] = useState<Posts[]>([]);\r\n\r\n    useEffect(() => {\r\n        fetchPost();\r\n    }, []);\r\n\r\n    const fetchPost = async () => {\r\n        const data = await fetch('http://localhost:4000/api/posts');\r\n        const posts = await data.json();\r\n        setListData(posts);\r\n        console.log(posts);\r\n    }\r\n\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        if (data.id) {\r\n            fetch(`http://localhost:4000/api/posts/${data.id}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify(data),\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    console.log(data);\r\n                    toast.success('Post Updated');\r\n                    setData({\r\n                        title: '',\r\n                        description: '',\r\n                        image_url: '',\r\n                        id: ''\r\n                    });\r\n                    fetchPost();\r\n                })\r\n                .catch(err => console.error(err));\r\n\r\n        } else {\r\n            fetch('http://localhost:4000/api/posts', {\r\n                method: 'POST',\r\n                body: JSON.stringify(data),\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    console.log(data);\r\n                    toast.success('Post Saved');\r\n                    setData({\r\n                        title: '',\r\n                        description: '',\r\n                        image_url: '',\r\n                    });\r\n                    fetchPost();\r\n                })\r\n                .catch(err => console.error(err));\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.target;\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    const handleChangeTextArea = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        const { name, value } = e.target;\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    const deletePost = (id: string) => {\r\n\r\n        swal({\r\n            title: 'Eliminar',\r\n            text: '¿Estás seguro que deseas eliminar este Post?',\r\n            icon: 'warning',\r\n            buttons: ['No', 'Sí']\r\n        }).then(respuesta => {\r\n            if (respuesta) {\r\n                // swal({\r\n                //     text: 'El Post se ha eliminado con éxito',\r\n                //     icon: 'success'\r\n                // });\r\n                fetch(`http://localhost:4000/api/posts/${id}`, {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(data => {\r\n                        console.log(data);\r\n                        toast.error('Post deleted');\r\n                        fetchPost();\r\n                    });\r\n            }\r\n        })\r\n    }\r\n\r\n    const updatePost = async (id: string) => {\r\n        const query = await fetch(`http://localhost:4000/api/posts/${id}`);\r\n        const post = await query.json();\r\n        console.log(post[0].title);\r\n        setData(post[0]);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Navbar />\r\n            <div className=\"container mt-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-3 col-md-6 offset-lg-1 offset-md-3 mb-lg-0 mb-md-4\">\r\n                        <Form\r\n                            onSubmit={handleSubmit}\r\n                            onChangeInput={handleChange}\r\n                            onChangeTextArea={handleChangeTextArea}\r\n                            formValues={data}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-lg-6 offset-lg-1 offset-md-0\">\r\n                        <List\r\n                            data={listData}\r\n                            delete={deletePost}\r\n                            update={updatePost}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                < ToastContainer />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Task;","import React from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\n\nimport Task from '../pages/Task'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Task} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}